name: Compile KFP pipelines

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "kubeflow-pipelines/docling-standard/**"
      - "kubeflow-pipelines/docling-vlm/**"
      - "kubeflow-pipelines/common/**"
      - ".github/workflows/compile-kfp.yml"
  push:
    branches: [ main ]
    paths:
      - "kubeflow-pipelines/docling-standard/**"
      - "kubeflow-pipelines/docling-vlm/**"
      - "kubeflow-pipelines/common/**"
      - ".github/workflows/compile-kfp.yml"

permissions:
  contents: read

jobs:
  compile:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: docling-standard
            dir: kubeflow-pipelines/docling-standard
            cmd: python standard_convert_pipeline.py
            out: standard_convert_pipeline_compiled.yaml
          - name: docling-vlm
            dir: kubeflow-pipelines/docling-vlm
            cmd: python vlm_convert_pipeline.py
            out: vlm_convert_pipeline_compiled.yaml

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install requirements for ${{ matrix.name }}
        working-directory: ${{ matrix.dir }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Compile and compare (${{ matrix.name }})
        run: |
          set -ux
          BASE="${{ matrix.dir }}/${{ matrix.out }}"
          SNAP="${BASE}.baseline"

          # Snapshot committed YAML in-place using mv, or create an empty baseline
          if [ -f "$BASE" ]; then
            mv "$BASE" "$SNAP"
          else
            : > "$SNAP"
          fi

          # Compile (regenerates $BASE)
          ( cd "${{ matrix.dir }}" && ${{ matrix.cmd }} )

          # Ensure compiled YAML exists and is non-empty
          test -s "$BASE"

          echo "Comparing compiled pipeline YAML to the committed version..."
          echo "If this fails, you changed pipeline code but did not regenerate/commit the compiled YAML."
          echo "To fix locally: (cd ${{ matrix.dir }} && ${{ matrix.cmd }}) and commit ${{ matrix.out }}."
          diff "$BASE" "$SNAP"
